geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tippoint(x = 4, aes(color = polar))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2), hjust = 1.2, vjust = -0.25)
# Now plot with updated labels
pdf("output/tree.pdf", width = 6, height = 5)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2), hjust = 1.2, vjust = -0.25)
dev.off()
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, text = element_text(size = 20)), hjust = 1.2, vjust = -0.25)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, text = element_text(size = 4)), hjust = 1.2, vjust = -0.25)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, text = element_text(size = 4), hjust = 1.2, vjust = -0.25))
?geom_nodelab
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, label.size = 4, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, label.size = 1, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, label.size = 50, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 3) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, hjust = 1.2, vjust = -0.25))
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2), hjust = 1.2, vjust = -0.25)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2, label.size = 1), hjust = 1.2, vjust = -0.25)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2),label.size = 1, hjust = 1.2, vjust = -0.25)
mlt_append +
xlim(0, 4) +
scale_color_gradient(low = "yellow", high = "red") +
geom_tippoint(x = 3.5, aes(color = temperature)) +
geom_tiplab(aes(label = fixnam), color = mlt_df6$temp_color[1:20]) +
geom_nodelab(aes(label = fixnam2), hjust = 1.2, vjust = -0.25)
# Install packages
pacman::p_load("gggenes", "ggtree", "ggplot2", "tidyverse", "plotly")
# Here are some example feature lists
olea <- read_csv("data/feature_lists/OleA_complete_features.csv") %>%
mutate(gene = "oleA")
oleb <- read_csv("data/feature_lists/OleB_complete_features.csv") %>%
mutate(gene = "oleB")
olec <- read_csv("data/feature_lists/OleC_complete_features.csv") %>%
mutate(gene = "oleC")
oled <- read_csv("data/feature_lists/OleD_complete_features.csv") %>%
mutate(gene = "oleD")
# Combine everything using the bind_rows function
combined <- olea %>%
bind_rows(oleb, olec, oled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome)
# Filter for only the sequences that are in your dataset
full50 <- read_csv("data/full50_4.csv")
gens_to_keep <- full50$genome_x
plotdat <- combined %>%
dplyr::filter(molecule %in% gens_to_keep) %>%
dplyr::select(molecule, gene, start, end, strand) %>%
dplyr::mutate(direction = case_when(strand == "+" ~ 1,
strand == "-" ~ -1)) %>%
dplyr::mutate(strand = case_when(direction == 1 ~ "forward",
direction == -1 ~ "reverse")) %>%
arrange(molecule)
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
# Read in the phylogenetic tree
ml <- read.tree("data/trees/20200617_20_psychro_thermo_ML_500boot.nwk") # maximum-likelihood method
mlt <- ggtree(ml)
# Uh oh...we have a problem...the tip labels don't match the molecule names!
mlt$data$label %in% plotdat$molecule # all FALSE
# How to fix???
# Do a join between the tree tip labels and the gene diagram plotting coordinates...by "genus"
tree_df <- data.frame(label = mlt$data$label) %>%
dplyr::mutate(genus = stringr::word(label, sep = "_", 2)) %>%
dplyr::filter(!is.na(genus))
duplicated(tree_df) # are any duplicated??
plotdat_df <- plotdat %>%
dplyr::mutate(genus = stringr::word(molecule, sep = " ", 1))
# Join them by = "genus"
# What sort of gymnastics is happening here?
plotdat_fixed <- plotdat_df %>%
left_join(., tree_df, by = "genus") %>%
dplyr::select(-molecule, -genus) %>%
dplyr::rename(molecule = label) %>%
dplyr::select(molecule, gene, start, end, strand, direction) %>%
arrange(molecule, gene)  %>%
group_by(molecule) %>%
dplyr::mutate(difference = start - first(start)) %>% # what the heck am I doing here???
dplyr::filter(abs(difference) < 10000) # what about here
view(plotdat_fixed)
mltr2 <- mlt +
geom_tiplab() +
xlim_tree(15) +
geom_facet(mapping = aes(xmin = start, xmax = end, fill = gene),
data = plotdat_fixed, geom = geom_motif, panel = 'Alignment',
on = "oleA", label = 'gene', align = 'left') +
scale_fill_brewer(palette = "Set3") +
scale_x_continuous(expand=c(0,0)) +
theme(strip.text=element_blank(),
panel.spacing=unit(0, 'cm'))
mltr2 # well that looks bad
## in case the facet panels were not ordered properly
mltr3 <- mltr2 + facet_grid(cols = vars(factor(.panel,
levels = c("Tree", "Alignment"))),
scales = 'free_x')
mltr3 # Well at least the Moritella looks good!!
pdf("output/tree2")
mltr3
dev.off()
mltr2 <- mlt +
geom_tiplab() +
xlim_tree(25) +
geom_facet(mapping = aes(xmin = start, xmax = end, fill = gene),
data = plotdat_fixed, geom = geom_motif, panel = 'Alignment',
on = "oleA", label = 'gene', align = 'left') +
scale_fill_brewer(palette = "Set3") +
scale_x_continuous(expand=c(0,0)) +
theme(strip.text=element_blank(),
panel.spacing=unit(0, 'cm'))
## in case the facet panels were not ordered properly
mltr3 <- mltr2 + facet_grid(cols = vars(factor(.panel,
levels = c("Tree", "Alignment"))),
scales = 'free_x')
pdf("output/tree2")
mltr3
dev.off()
pdf("output/tree2", width = 10, height = 10)
mltr3
dev.off()
pdf("output/tree2.pdf", width = 10, height = 7)
mltr3
dev.off()
view(plotdat_df)
view(plotdat_fixed)
# Combine everything using the bind_rows function
combined <- olea %>%
bind_rows(oleb, olec, oled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome) %>%
arrange(molecule, gene) %>%
slice(1)
View(combined)
# Combine everything using the bind_rows function
combined <- olea %>%
bind_rows(oleb, olec, oled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome) %>%
group_by(molecule, gene) %>%
slice(1)
View(combined)
plotdat <- combined
plotdat_df <- plotdat %>%
dplyr::mutate(genus = stringr::word(molecule, sep = " ", 1))
# Join them by = "genus"
# What sort of gymnastics is happening here?
plotdat_fixed <- plotdat_df %>%
left_join(., tree_df, by = "genus") %>%
dplyr::select(-molecule, -genus) %>%
dplyr::rename(molecule = label) %>%
dplyr::select(molecule, gene, start, end, strand, direction) %>%
arrange(molecule, gene)  %>%
group_by(molecule) %>%
dplyr::mutate(difference = start - first(start)) %>% # what the heck am I doing here???
dplyr::filter(abs(difference) < 10000) # what about here
view(plotdat_df)
# Join them by = "genus"
# What sort of gymnastics is happening here?
plotdat_fixed <- plotdat_df %>%
left_join(., tree_df, by = "genus") %>%
dplyr::select(-molecule, -genus) %>%
dplyr::rename(molecule = label) %>%
dplyr::select(molecule, gene, start, end, strand, direction) %>%
arrange(molecule, gene)  %>%
group_by(molecule) %>%
dplyr::mutate(difference = start - first(start)) %>% # what the heck am I doing here???
dplyr::filter(abs(difference) < 10000) # what about here
View(plotdat_df)
# Install packages
pacman::p_load("gggenes", "ggtree", "ggplot2", "tidyverse", "plotly")
# Here are some example feature lists
olea <- read_csv("data/feature_lists/OleA_complete_features.csv") %>%
mutate(gene = "oleA")
oleb <- read_csv("data/feature_lists/OleB_complete_features.csv") %>%
mutate(gene = "oleB")
olec <- read_csv("data/feature_lists/OleC_complete_features.csv") %>%
mutate(gene = "oleC")
oled <- read_csv("data/feature_lists/OleD_complete_features.csv") %>%
mutate(gene = "oleD")
# Combine everything using the bind_rows function
combined <- olea %>%
bind_rows(oleb, olec, oled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome) %>%
group_by(molecule, gene) %>%
slice(1)
plotdat <- combined
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
view(combined)
# Combine everything using the bind_rows function
combined <- olea %>%
bind_rows(oleb, olec, oled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome) %>%
group_by(molecule, gene) %>%
slice(1) %>%
ungroup()
view(combined)
plotdat <- combined
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
plotdat <- combined %>%
# dplyr::filter(molecule %in% gens_to_keep) %>%
dplyr::select(molecule, gene, start, end, strand) %>%
dplyr::mutate(direction = case_when(strand == "+" ~ 1,
strand == "-" ~ -1)) %>%
dplyr::mutate(strand = case_when(direction == 1 ~ "forward",
direction == -1 ~ "reverse")) %>%
arrange(molecule)
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
gpl
dev.off()
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
pdf("output/tree3.pdf")
gpl
dev.off()
# Read in the phylogenetic tree
ml <- read.tree("data/trees/20200617_20_psychro_thermo_ML_500boot.nwk") # maximum-likelihood method
mlt <- ggtree(ml)
# How to fix???
# Do a join between the tree tip labels and the gene diagram plotting coordinates...by "genus"
tree_df <- data.frame(label = mlt$data$label) %>%
dplyr::mutate(genus = stringr::word(label, sep = "_", 2)) %>%
dplyr::filter(!is.na(genus))
duplicated(tree_df) # are any duplicated??
tree_df$genus
tree_df$genus[grep("deltaproteobacteria", tree_df$genus)]
tree_df$genus[grep("Deltaproteobacteria", tree_df$genus)]
tree_df$genus[grep("Deltaproteobacteria", tree_df$genus)][1]
tree_df$genus[grep("Deltaproteobacteria", tree_df$genus)][1] <- "Deltaproteobacteria1"
tree_df$genus[grep("Deltaproteobacteria", tree_df$genus)][2] <- "Deltaproteobacteria2"
plotdat_df <- plotdat %>%
dplyr::mutate(genus = stringr::word(molecule, sep = " ", 1))
view(plotdat_df)
table(plotdat_df$genus)
view(plotdat_df)
view(tree_df)
plotdat <- combined
view(plotdat)
view(olea)
blastoleb <- read_csv("data/BLAST_OleB_genome_group.csv")
colnames(blastoleb)
colnames(oleb)
view(oleb)
view(blastoleb)
intersect(blastoleb$Genome, oleb$Genome)
setdiff(blastoleb$Genome, oleb$Genome)
dim(oleb)
setdiff(oleb$Genome, blastoleb$Genome)
comboleb <- oleb %>%
left_join(blastoleb)
comboleb
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names()
comboleb
view(comboleb)
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25)
comboleb
table(comboleb$genome, comboleb$gene)
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrrange(identity) %>%
group_by(genome, gene) %>%
slice(1)
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(identity) %>%
group_by(genome, gene) %>%
slice(1)
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(desc(identity)) %>%
group_by(genome, gene) %>%
slice(1)
View(comboleb)
table(comboleb$genome, comboleb$gene)
blastolea <- read_csv("data/BLAST_OleA_genome_group.csv")
blastolea <- read_csv("data/blast_output/BLAST_OleA_genome_group.csv")
# Here are some example feature lists
olea <- read_csv("data/feature_lists/OleA_complete_features.csv") %>%
mutate(gene = "oleA")
blastolea <- read_csv("data/blast_output/BLAST_OleA_genome_group.csv")
combolea <- olea %>%
left_join(blastolea) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(desc(identity)) %>%
group_by(genome, gene) %>%
slice(1)
combolea
oleb <- read_csv("data/feature_lists/OleB_complete_features.csv") %>%
mutate(gene = "oleB")
blastoleb <- read_csv("data/blast_output/BLAST_OleB_genome_group.csv")
# view(blastoleb)
# view(oleb)
# dim(oleb)
# setdiff(oleb$Genome, blastoleb$Genome)
comboleb <- oleb %>%
left_join(blastoleb) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(desc(identity)) %>%
group_by(genome, gene) %>%
slice(1)
comboleb
olec <- read_csv("data/feature_lists/OleC_complete_features.csv") %>%
mutate(gene = "oleC")
blastolec <- read_csv("data/blast_output/BLAST_OleC_genome_group.csv")
combolec <- olec %>%
left_join(blastolec) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(desc(identity)) %>%
group_by(genome, gene) %>%
slice(1)
combolec
oled <- read_csv("data/feature_lists/OleD_complete_features.csv") %>%
mutate(gene = "oleD")
blastoled <- read_csv("data/blast_output/BLAST_OleD_genome_group.csv")
comboled <- oled %>%
left_join(blastoled) %>%
janitor::clean_names() %>%
filter(query_cover > 75, identity > 25) %>%
arrange(desc(identity)) %>%
group_by(genome, gene) %>%
slice(1)
comboled
# Filter for only the sequences that are in your dataset
full50 <- read_csv("data/full50_4.csv")
# plotdat <- combined
plotdat <- combined %>%
# dplyr::filter(molecule %in% gens_to_keep) %>%
dplyr::select(molecule, gene, start, end, strand) %>%
dplyr::mutate(direction = case_when(strand == "+" ~ 1,
strand == "-" ~ -1)) %>%
dplyr::mutate(strand = case_when(direction == 1 ~ "forward",
direction == -1 ~ "reverse")) %>%
arrange(molecule)
# Combine everything using the bind_rows function
combined <- combolea %>%
bind_rows(comboleb, combolec, comboled) %>%
janitor::clean_names() %>%
dplyr::rename(molecule = genome) %>%
group_by(molecule, gene) %>%
slice(1) %>%
ungroup()
view(combined)
# plotdat <- combined
plotdat <- combined %>%
# dplyr::filter(molecule %in% gens_to_keep) %>%
dplyr::select(molecule, gene, start, end, strand) %>%
dplyr::mutate(direction = case_when(strand == "+" ~ 1,
strand == "-" ~ -1)) %>%
dplyr::mutate(strand = case_when(direction == 1 ~ "forward",
direction == -1 ~ "reverse")) %>%
arrange(molecule)
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
pdf("output/tree3.pdf")
gpl
dev.off()
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
pdf("output/tree3.pdf")
gpl
dev.off()
pdf("output/tree3.pdf")
gpl
dev.off()
# Make a gene plot - check it is still working
gpl <- ggplot(plotdat,
aes(xmin = start, xmax = end, fill = gene, y = molecule)) +
geom_gene_arrow() +
facet_wrap(~ molecule, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
gpl
