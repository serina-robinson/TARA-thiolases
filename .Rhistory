# Install packages
packs <- c("rentrez", "Biostrings", "DECIPHER")
lapply(packs, require, character.only = T)
# Install packages
pacman::p_load("Biostrings", "DECIPHER")
# Set working directory
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/agbiome/")
# Read in the accessions
noc <- read.table('data/nocardia_assemblies.txt', stringsAsFactors = F)
head(noc)
noc[1,]
db <- list()
ll <- list()
noc[,1]
for(i in 1:nrow(noc)){
nocnam <- gsub("\\.faa",".db",noc[i,])
db[[i]] <- paste0("makeblastdb -in ", noc[i,], " -dbtype prot -out ../nocardia_db/", nocnam)
ll[[i]] <- paste0("blastp -query ../../robi0916/agbiome/query/20_query_seqs.fasta -db ../nocardia_db/", nocnam, " -out ../../robi0916/agbiome/blast_output/", nocnam, ".out -num_threads 4 -outfmt 6 -max_target_seqs 5")
}
ll
# Read in the accessions
noc <- read.table('data/nocardia_assemblies.txt', stringsAsFactors = F)
head(noc)
noc[1,]
noc[,1]
write.table(unldb, "data/nocardia_makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
write.table(unl, "data/nocardia_blastp_commands.txt", row.names = F, quote = F, col.names = F)
unldb <- unlist(db)
unl <- unlist(ll)
head(unl)
write.table(unldb, "data/nocardia_makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
write.table(unl, "data/nocardia_blastp_commands.txt", row.names = F, quote = F, col.names = F)
# Set working directory
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/agbiome/")
# Read in the accessions
noc <- read.table('data/nocardia_assemblies.txt', stringsAsFactors = F)
View(noc)
noc[,1]
db <- list()
ll <- list()
for(i in 1:nrow(noc)){
print(i)
nocnam <- gsub("\\.faa",".db",noc[i,])
db[[i]] <- paste0("makeblastdb -in ", noc[i,], " -dbtype prot -out ../nocardia_db/", nocnam)
ll[[i]] <- paste0("blastp -query ../../robi0916/agbiome/query/20_query_seqs.fasta -db ../nocardia_db/", nocnam, " -out ../../robi0916/agbiome/blast_output/", nocnam, ".out -num_threads 4 -outfmt 6 -max_target_seqs 5")
}
head(db)
unlist(db)
unl <- unlist(ll)
head(ll)
write.table(unldb, "data/nocardia_makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
unldb <- unlist(db)
unl <- unlist(ll)
head(ll)
write.table(unldb, "data/nocardia_makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
write.table(unl, "data/nocardia_blastp_commands.txt", row.names = F, quote = F, col.names = F)
# Load necessary packages
# install.packages("pacman") # run if pacman not already installed
source("http://bioconductor.org/biocLite.R")
# Set working directory
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/desiccation-prediction/")
# Read in example data
fasta1 <- readAAStringSet("data/test2.faa")
fasta2 <- readAAStringSet("data/test5.faa")
fasta3 <- readAAStringSet("data/test10.faa")
# Combine all the FASTA files into one FASTA file
fastall <- AAStringSet(c(fasta1, fasta2, fasta3))
length(fastall)
# Check if there are any duplicates
fasta_dedup <- fasta_all[!duplicated(fasta_all)]
# Combine all the FASTA files into one FASTA file
fasta_all <- AAStringSet(c(fasta1, fasta2, fasta3))
length(fasta_all) # Length is now 17 seqs (test2 + test5 + test10)
# Check if there are any duplicates
fasta_dedup <- fasta_all[!duplicated(fasta_all)]
fasta_dedup
# Read in example FASTA files
fasta1 <- readAAStringSet("data/test10.faa") # 2 sequences
# Read in example FASTA files
fasta1 <- readAAStringSet("data/test10.faa") # 10 sequences
fasta2 <- readAAStringSet("data/test5.faa") # 5 sequences
fasta3 <- readAAStringSet("data/test10.faa") # 10 sequences
# Combine all the FASTA files into one FASTA file
fasta_all <- AAStringSet(c(fasta1, fasta2, fasta3))
length(fasta_all) # Length is now 17 seqs (test2 + test5 + test10)
length(fasta_all) # Length is now 25 seqs (test10 + test5 + test10)
# Check if there are any duplicates
fasta_dedup <- fasta_all[!duplicated(fasta_all)]
fasta_dedup
# Check if there are any duplicates
table(duplicated(fasta_all))
# Read in the genome accessions
noc <- read.table('data/nocardia_assemblies.txt', stringsAsFactors = F)
View(fasta3)
db <- list()
ll <- list()
for(i in 1:nrow(noc)){
print(i)
nocnam <- gsub("\\.faa",".db",noc[i,])
db[[i]] <- paste0("makeblastdb -in ", noc[i,], " -dbtype prot -out nocardia_db/", nocnam)
ll[[i]] <- paste0("blastp -query query/20_query_seqs.fasta -db nocardia_db/", nocnam, " -out blast_output/", nocnam, ".out -num_threads 4 -outfmt 6 -max_target_seqs 10")
}
unldb <- unlist(db)
unl <- unlist(ll)
head(ll)
unl
write.table(unldb, "output/makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
write.table(unl, "output/nocardia_blastp_commands.txt", row.names = F, quote = F, col.names = F)
# Read in the genome accessions
noc <- read.table('data/nocardia_assemblies.txt', stringsAsFactors = F)
db <- list()
ll <- list()
for(i in 1:nrow(noc)){
nocnam <- gsub("\\.faa",".db",noc[i,])
db[[i]] <- paste0("makeblastdb -in ", noc[i,], " -dbtype prot -out nocardia_db/", nocnam)
ll[[i]] <- paste0("blastp -query query/20_query_seqs.fasta -db nocardia_db/", nocnam, " -out blast_output/", nocnam, ".out -num_threads 4 -outfmt 6 -max_target_seqs 10")
}
unldb <- unlist(db)
unldb
unl <- unlist(ll)
write.table(unldb, "output/makeblastdb_commands.txt", row.names = F, quote = F, col.names = F)
write.table(unl, "output/nocardia_blastp_commands.txt", row.names = F, quote = F, col.names = F)
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/TARA-thiolases/")
# getOption("repos")
# options(repos = BiocManager::repositories())
library(flexdashboard)
library(knitr)
library(shiny)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
message = FALSE, fig.align = 'center',
fig.dim = c(4, 6))
# Read in the environmental features for mapping
dat <- read_csv("data/TARA_tree_annotation_df.csv")
# Read in the environmental features for mapping
dat <- read_csv("data/TARA_tree_annotation_df.csv")
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/TARA-thiolases/")
# Read in the environmental features for mapping
dat <- read_csv("data/TARA_tree_annotation_df.csv")
# Set the working directory
setwd("~/Documents/University_of_Minnesota/Wackett_Lab/github/TARA-thiolases/")
# Read in the environmental features for mapping
dat <- read_csv("data/TARA_tree_annotation_df.csv")
# getOption("repos")
# options(repos = BiocManager::repositories())
library(flexdashboard)
library(knitr)
library(shiny)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
message = FALSE, fig.align = 'center',
fig.dim = c(4, 6))
# Read in the environmental features for mapping
dat <- read_csv("../data/TARA_tree_annotation_df.csv")
# Read in the environmental features for mapping
dat <- read_csv("../../data/TARA_tree_annotation_df.csv")
# getOption("repos")
# options(repos = BiocManager::repositories())
library(flexdashboard)
library(knitr)
library(shiny)
library(tidyverse)
library(leaflet)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
message = FALSE, fig.align = 'center',
fig.dim = c(4, 6))
# Read in the environmental features for mapping
dat <- read_csv("../../data/TARA_tree_annotation_df.csv")
dat$depth_m
dat$temperature
class(dat$temperature)
class(dat$temperature)
library(data.table)
# getOption("repos")
# options(repos = BiocManager::repositories())
library(flexdashboard)
library(knitr)
library(shiny)
library(tidyverse)
library(leaflet)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
message = FALSE, fig.align = 'center',
fig.dim = c(4, 6))
colnames(dat)
